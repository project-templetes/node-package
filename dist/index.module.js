#!/usr/bin/env node
import*as e from"fs";import*as r from"path";import t from"inquirer";import{Command as o}from"commander";var n,a=function(o){try{return Promise.resolve(t.prompt([{type:"input",name:"dir",message:"Enter the name of the directory",default:"redux-provider"}])).then(function(t){return e.existsSync(r.join(o,t.dir))?(console.log(s,"Directory "+o+" already exists"),a(o)):[r.join(o,t.dir),r.join(o,t.dir,"states")]})}catch(e){return Promise.reject(e)}},i=function(o,n){try{return Promise.resolve(t.prompt([{type:"input",name:"baseDir",message:"Where do you want to create the redux-provider?",default:n.split(r.sep).pop()}])).then(function(a){if(a.baseDir!==n.split(r.sep).pop()&&(n=r.isAbsolute(a.baseDir)?a.baseDir:r.join(n,a.baseDir)),!e.existsSync(n)){console.log(s,"Directory "+n+" does not exist"),n=r.join(n,".."),console.log(c,n);var l=e.readdirSync(n).filter(function(t){return!t.startsWith(".")&&e.statSync(r.join(n,t)).isDirectory()});return console.log("Available folders in the directory: "),l.forEach(function(e){console.log(u,e)}),i(o,n)}return Promise.resolve(t.prompt([{type:"confirm",name:"confirm",message:"Is this the correct directory? "+n,default:!0}])).then(function(t){if(!t.confirm){console.log(c,n);var a=e.readdirSync(n).filter(function(t){return!t.startsWith(".")&&e.statSync(r.join(n,t)).isDirectory()});return console.log("Available folders in the directory: "),a.forEach(function(e){console.log(u,e)}),i(o,n)}return n})})}catch(e){return Promise.reject(e)}},s="[31m%s[0m",c="[32m%s[0m",u="[34m%s[0m",l="[0m",m=new o;m.parse(process.argv),0===m.args.length&&(n=process.cwd(),Promise.resolve(i(n,n)).then(function(e){return Promise.resolve(a(e)).then(function(e){var r=e[0],o=e[1];return Promise.resolve(function(){try{return Promise.resolve(t.prompt([{type:"list",name:"framework",message:"What type of project you are using?",choices:["Next","React"]}])).then(function(e){return e.framework})}catch(e){return Promise.reject(e)}}()).then(function(e){return Promise.resolve(function(){try{return Promise.resolve(t.prompt([{type:"confirm",name:"typescript",message:"Are you using TypeScript?"}])).then(function(e){return e.typescript})}catch(e){return Promise.reject(e)}}()).then(function(t){return console.log("[32m->[0m [34m",r,l),console.log("[32m->[0m [34m",e,t?"TS":"JS",l),{baseDir:r,statesDir:o,framework:e,typescript:t}})})})})).then(function(t){try{return function(t){var o=t.baseDir,n=t.statesDir,a="next"===(""+t.framework).toLowerCase(),i=t.typescript;e.mkdirSync(n,{recursive:!0});var s=(a?"'use client';":"")+'\nimport { createSlice } from "@reduxjs/toolkit";\nimport { useLocalStorage } from "../use-local-storage";\n\nconst {\n    readLocalStorage, \n    updateLocalStorage\n} = useLocalStorage(\'auth\', {\n    isAuth: false,\n    token: "",\n  });\n  \nconst auth = createSlice({\n    name: "auth",\n    initialState: readLocalStorage(),\n    reducers: {\n        logout: () => updateLocalStorage(null),\n        login: (state, action) =>  updateLocalStorage({\n            isAuth: true,\n            ...(action.payload)\n        })\n\n    }\n})\n\nexport default auth;\n';e.writeFileSync(r.join(n,i?"auth.ts":"auth.js"),s);var c=(a?"'use client';":"")+'\nimport { Provider } from "react-redux";\nimport { configureStore } from "@reduxjs/toolkit";\nimport auth from "./states/auth";\nimport React, { useEffect } from "react";\nconst store = configureStore({\n  reducer: {\n    auth: auth.reducer,\n  },\n});\nexport const authActions = auth.actions;\nexport default function ReduxProvider({ children }'+(i?": { children: React.ReactNode }":"")+") {\n  useEffect(() => {}, []);\n  return <Provider store={store}>{children}</Provider>;\n};\n";e.writeFileSync(r.join(o,i?"index.tsx":"index.jsx"),c);var u="export const useLocalStorage = (key"+(i?": string":"")+", defaultState"+(i?": any":"")+") => {\n  return {\n      updateLocalStorage: (data"+(i?": any":"")+" = null) => {\n          if (!data) return localStorage.removeItem(key);\n          localStorage.setItem(key, JSON.stringify(data));\n      },\n      readLocalStorage: () => {\n          if (typeof window !== 'undefined') {\n            const data = localStorage.getItem(key);\n            return !!data && data !== \"undefined\"\n              ? JSON.parse(data) \n              : defaultState;\n          } \n          return defaultState;\n        },\n        \n  }\n}\n";e.writeFileSync(r.join(o,i?"use-local-storage.ts":"use-local-storage.js"),u),console.log("Redux provider structure created successfully.")}(t),Promise.resolve()}catch(e){return Promise.reject(e)}}).catch(function(e){"ExitPromptError"===e.name?console.log(s,"Prompt was force closed by the user."):console.error(e)});
//# sourceMappingURL=index.module.js.map
